mean(mt2,trim = 0.15)
summary(mt2)
sd(mt2)
table(data = mtcars$cyl)
table(data = mtcars$cyl)
barplot(mtcar$cyl, main = '실린더수')
barplot(mtcars$cyl, main = '실린더수')
cyl2 <- table(data = mtcars$cyl)
barplot(mtcars$cyl2, main = '실린더수')
barplot(cyl2, main = '실린더수')
barplot(cyl2, main = '실린더수', las = 1)
hist(mt2, main = '중량')
mt3 <- table(mt2)
hist(mt3, main = '중량')
hist(mt2, main = '중량')
hist(mt2, main = '중량', las = 1)
boxplot(mt2, main = '중량표', las=1)
hist(mt2, main = '중량', las = 1)
boxplot(mt2, main = '중량표', las=1)
boxplot(mt2, main = '중량표', las=1,
ylab = '중량')
boxplot(mt2, main = 'mtcars 중량표', las=1,
ylab = '중량')
mtcars[1,'wt']
mtcars[c(),'wt']
mtcars[,'wt']
mtcars
boxplot(mt2, main = 'mtcars 중량표', las=1,
ylab = '중량')
disp2 <- mtcars[,'disp']
disp2
boxplot(disp2, main = 'mtcars의 배기량', las=1,
ylab = 'ㅇㅇ')
hist(mt2, main = '중량', las = 1)
barplot(cyl2, main = '실린더수', las = 1)
cyl2
barplot(cyl2, main = '각 실린더의 도수분포표', las = 1,
xlab = 'x 개의 실린더')
boxplot(disp2, main = 'mtcars의 배기량', las=1,
ylab = 'hit')
par(mfrow = c(1,3)) # 화면분할
boxplot(disp2, main = 'mtcars의 배기량', las=1,
ylab = 'hit')
par(mfrow = c(1,2)) # 화면분할
boxplot(mt2, main = 'mtcars 중량표', las=1,
ylab = '중량')
boxplot(mtcars$mpg, main = 'mtcars mpg', las=1,
ylab = '연비')
boxplot(mt2, main = 'mtcars 중량표', las=1,
xlab = '중량')
boxplot(mtcars$mpg, main = 'mtcars mpg', las=1,
xlab = '연비')
par(mfrow = c(1,2)) # 화면분할
boxplot(mt2, main = 'mtcars 중량표', las=1,
xlab = '중량')
boxplot(mtcars$mpg, main = 'mtcars 연비표', las=1,
xlab = '연비')
par(mfrow = c(1,2)) # 화면분할
boxplot(disp2, main = 'mtcars의 배기량', las=1,
xlab = '배기량')
boxplot(mtcars$cyl, main = 'mtcars의 실린더', las=1,
xlab = '실린더')
boxplot(cyl2, main = 'mtcars의 실린더', las=1,
xlab = '실린더')
boxplot(disp2, main = 'mtcars의 배기량', las=1,
xlab = '배기량')
boxplot(cyl2, main = 'mtcars의 실린더', las=1,
xlab = '실린더')
cyl2 <- table(data = mtcars$cyl)
boxplot(disp2, main = 'mtcars의 배기량', las=1,
xlab = '배기량')
boxplot(cyl2, main = 'mtcars의 실린더', las=1,
xlab = '실린더')
cyl2 <- table(mtcars$cyl)
cyl2
boxplot(cyl2, main = 'mtcars의 실린더', las=1,
xlab = '실린더')
boxplot(disp2, main = 'mtcars의 배기량', las=1,
xlab = '배기량')
boxplot(cyl2, main = 'mtcars의 실린더', las=1,
xlab = '실린더')
cyl2
disp2
boxplot(disp2, main = 'mtcars의 배기량', las=1,
xlab = '배기량')
boxplot(cyl2, main = 'mtcars의 실린더', las=1,
xlab = '실린더')
par(mfrow = c(1,1)) # 화면분할
boxplot(disp2, main = 'mtcars의 배기량', las=1,
xlab = '배기량')
boxplot.stats(disp2)
boxplot(mt2, main = 'mtcars 중량표', las=1,
xlab = '중량')
boxplot.stats(mt2)
gear2 <- table(mtcars$gear)
gear2
boxplot(gear3, main = '기어 3개', las = 1)
gear3 <- table(mtcars$gear==3)
gear4 <- table(mtcars$gear==4)
gear5 <- table(mtcars$gear==5)
boxplot(gear3, main = '기어 3개', las = 1)
gear3
gear4
gear5
table(gear3)
gear3 <- table(mtcars$gear) == 4
gear3
gear3 <- table(mtcars$gear,mtcars$mpg)
gear3
gear3 <- table(mtcars$gear~mtcars$mpg)
table(mtcars$gear~mtcars$mpg)
gear3
gear3 <- mtcars[,"gear"]
gear3
gear1 <- mtcars[,"gear"]
gear1
table(gear1)
boxplot(gear1, main = '기어 3개', las = 1)
boxplot(table(gear1), main = '기어 3개', las = 1)
boxplot(g1, main = '기어 3개', las = 1)
g1<- table(gear1)
boxplot(g1, main = '기어 3개', las = 1)
g1
g1
boxplot(g1, main = '기어 3개', las = 1)
g1<- table(gear1)
g1
barplot(g1, main = 'dd')
gear1 <- mtcars[,"gear"]
gear1
boxplot(gear1, main = '기어 3개', las = 1)
gear1 <- mtcars$gear
gear1
gear1 <- mtcars$gear==3
gear1
boxplot(gear1, main = '기어 3개', las = 1)
gear1 <- mtcars$gear
gear1
par(mfrow = c(1,3)) # 화면분할
boxplot(15, main = '기어 3개', las = 1)
boxplot(12, main = '기어 3개', las = 1)
boxplot(5, main = '기어 3개', las = 1)
gear1 <- mtcars$gear=3
gear1 <- mtcars$gear==3
gear1
gear1 <- mtcars$gear
gear1
table(gear1)
boxplot(gear1, main = '기어 3개', las = 1)
boxplot(gear ~ mpg,
data = mtcars,
main = '품종별 꽃잎의 길이',
las=1)
par(mfrow = c(1,1)) # 화면분할
boxplot(gear ~ mpg,
data = mtcars,
main = '품종별 꽃잎의 길이',
las=1)
boxplot(mpg~gear,
data = mtcars,
main = '품종별 꽃잎의 길이',
las=1)
mtcars
boxplot(mpg~gear,
data = mtcars,
main = 'Gear의 그룹정보와 연비',
las=1)
summary(mtcars$mpg)
summary(mtcars$gear)
summary(mtcars$gear==3)
summary(mtcars$gear==4)
summary(mtcars$gear==5)
summary(mtcars)
summary(mtcars$gear==3)
summary(mtcars$gear==4)
summary(mtcars$gear==5)
summary(mtcars$gear[mtcars$gear ==3])
summary(mtcars$mpg[mtcars$gear ==3])
summary(mtcars$mpg[mtcars$gear ==3])
summary(mtcars$mpg[mtcars$gear ==4])
summary(mtcars$mpg[mtcars$gear ==5])
trees
pairs(trees,
cex = 1.5, pch = 24, bg = "red", horOdd=T,
cex.labels = 3, font.labels = 4)
cor(trees)
boxplot(trees, main = ' 상관관계 ')
boxplot(trees$Girth~trees$Volume, data = trees, main = ' 상관관계 ')
boxplot(trees$Volume~trees$Girth, data = trees, main = ' 상관관계 ')
boxplot(tree1, main = ' 상관관계 ', las = 1)
tree_1 <- trees[,c('Height','Girth')]
boxplot(tree1, main = ' 상관관계 ', las = 1)
boxplot(tree_1, main = ' 상관관계 ', las = 1)
ca <- lm(trees$Height~trees$Volume)
ca
abline(ca)
pairs(trees,
cex = 1.5, pch = 24, bg = "red", horOdd=T,
cex.labels = 3, font.labels = 4)
cor(trees)
abline(ca)
pairs(trees,
cex = 1.5, main = "지름과 높이와 무게의 상관관계", pch = 24, bg = "red", horOdd=T,
cex.labels = 3, font.labels = 4)
cor(trees)
par(mfrow = c(2,3))
for (i in 1:5) {
hist(myds[,i], main = colnames(myds)[i],
col = 'yellow')
}
barplot(table(grp) , main = 'grp')
par(mfrow = c(1,1))
myds <- BostonHousing[ , c( 'crim',
'rm',
'dis',
'tax',
'medv')]
myds[,'tax']
library(mlbench)
myds <- BostonHousing[ , c( 'crim',
'rm',
'dis',
'tax',
'medv')]
myds[,'tax']
head(BostonHousing)
tail(BostonHousing)
install.packages("mlbench")
library(mlbench)
install.packages("mlbench")
library(mlbench)
class(BostonHousing)
str(BostonHousing)
library(rJava)
library(xlsx)
library(xlsxjars)
str(BostonHousing)
data("BostonHousing")
class(BostonHousing)
dim(BostonHousing)
str(BostonHousing)
head(BostonHousing)
tail(BostonHousing)
myds <- BostonHousing[ , c( 'crim',
'rm',
'dis',
'tax',
'medv')]
myds[,'tax']
pairs(myds[, -6])
point <- as.integer(myds$grp)
color <- c('red','green','blue')
pairs(myds[,-6], pch = point,
col = color[point])
point <- as.integer(myds$grp)
color <- c('red','green','blue')
pairs(myds[,-6], pch = point,
col = color[point])
grp <- c()
for ( i in 1:nrow(myds)) {
if (myds$medv[i] >= 25.0) {
grp[i] <- 'H'
} else if( myds$medv[i] <= 17.0) {
grp[i] <- 'L'
} else  {
grp[i] <- 'M'
}
}
grp
grp <- factor(grp)
grp <- factor(grp, levels = c('H','M',"L"))
myds <- data.frame(myds, grp)
head(myds)
point <- as.integer(myds$grp)
color <- c('red','green','blue')
pairs(myds[,-6], pch = point,
col = color[point])
myds
pairs(myds, pch = point,
col = color[point])
point <- as.integer(myds$grp)
color <- c('red','green','blue')
pairs(myds, pch = point,
col = color[point])
pairs(myds[,-6], pch = point,
col = color[point])
install.packages("treemap")
library(treemap)
install.packages(c("gapminder", "hrbrthemes", "leaflet", "plotly", "tidyverse", "viridis", "wordcloud2"))
us <- data.frame(state.x77, state.division)
st <- data.frame(state.x77)
st <- data.frame(st, stname = rownames(st))
treemap(us,
index = c("state.division","stname"),
vSize = "Population",
vColor = "Income",
type = "value",
title = " 미국 주별 인구수")
st
us
us <- data.frame(st, stname = rownames(st))
us
us <- data.frame(state.x77, state.division)
us
us <- data.frame(st, stname = rownames(st))
us
us <- data.frame(state.x77, state.division)
us <- data.frame(us, stname = rownames(us))
us
treemap(us,
index = c("state.division","stname"),
vSize = "Population",
vColor = "Income",
type = "value",
title = " 미국 주별 인구수")
treemap(us,
index = c("state.division","stname"),
vSize = "HS.Grad",
vColor = "Murder",
type = "value",
title = " 미국 주별 고교졸업률 면적 대비 살인율")
treemap(us,
index = c("state.division","stname"),
vSize = "HS.Grad",
vColor = "Murder",
type = "value",
title = " 미국 주별 고교졸업률 면적 대비 살인율")
sp <- split(iris, iris$Species)
sp
month <- c(1,2,3,4,5,6)
rain <- c(55,50,45,50,60,70)
df <- data.frame(month,rain)
df
ggplot(df,aes(x = month, y=rain)) + # ggplot에 aes(x,y) 입력가능
geom_bar(stat = 'identity', # y값을 가지고 그래프를 그려라
width = 0.7, # 폭
fill = 'steelblue') # 색상
library(tidyverse)
ggplot(df,aes(x = month, y=rain)) + # ggplot에 aes(x,y) 입력가능
geom_bar(stat = 'identity', # y값을 가지고 그래프를 그려라
width = 0.7, # 폭
fill = 'steelblue') # 색상
df
ggplot(iris, aes(x = Petal.Length)) +
geom_histogram(binwidth = 0.5) # 값의 단위를 0.5 씩으로 해라
ggplot(iris, aes(x = Sepal.Width , fill = Species,
color= Species)) + # fill : 막대를 채우는 색, Species = 3가지 범주형
geom_histogram(binwidth = 0.5, position = "dodge") + # position = 품종별로 각각 그래프를 그림
theme(legend.position = "top") # 범례를 top 에 작성해라
ggplot(iris, aes(x = Sepal.Width , fill = Species,
color= Species)) + # fill : 막대를 채우는 색, Species = 3가지 범주형
geom_histogram(binwidth = 0.5, position = "fill") + # position = 품종별로 각각 그래프를 그림
theme(legend.position = "top") # 범례를 top 에 작성해라
ggplot(iris, aes(x = Sepal.Width , fill = Species,
color= Species)) + # fill : 막대를 채우는 색, Species = 3가지 범주형
geom_histogram(binwidth = 0.5, position = "identity") + # position = 품종별로 각각 그래프를 그림
theme(legend.position = "top") # 범례를 top 에 작성해라
ggplot(iris, aes(x = Sepal.Width , fill = Species,
color= Species)) + # fill : 막대를 채우는 색, Species = 3가지 범주형
geom_histogram(binwidth = 0.5, position = "fill") + # position = 품종별로 각각 그래프를 그림
theme(legend.position = "top") # 범례를 top 에 작성해라
ggplot(iris, aes(x = Sepal.Width , fill = Species,
color= Species)) + # fill : 막대를 채우는 색, Species = 3가지 범주형
geom_histogram(binwidth = 0.5, position = "jitter") + # position = 품종별로 각각 그래프를 그림
theme(legend.position = "top") # 범례를 top 에 작성해라
ggplot(iris, aes(x = Sepal.Width , fill = Species,
color= Species)) + # fill : 막대를 채우는 색, Species = 3가지 범주형
geom_histogram(binwidth = 0.5, position = "jitterdodge") + # position = 품종별로 각각 그래프를 그림
theme(legend.position = "top") # 범례를 top 에 작성해라
ggplot(iris, aes(x = Sepal.Width , fill = Species,
color= Species)) + # fill : 막대를 채우는 색, Species = 3가지 범주형
geom_histogram(binwidth = 0.5, position = "nudge") + # position = 품종별로 각각 그래프를 그림
theme(legend.position = "top") # 범례를 top 에 작성해라
ggplot(iris, aes(x = Sepal.Width , fill = Species,
color= Species)) + # fill : 막대를 채우는 색, Species = 3가지 범주형
geom_histogram(binwidth = 0.5, position = "stack") + # position = 품종별로 각각 그래프를 그림
theme(legend.position = "top") # 범례를 top 에 작성해라
ggplot(data = iris, mapping = aes (x = Petal.Length,
y = Petal.Width)) +
geom_point()
ggplot(data = iris ) +
geom_point(mapping = aes (x = Petal.Length,
y = Petal.Width))
ggplot(data = iris ,mapping = aes (x = Petal.Length,
y = Petal.Width,
color = Species,
shape = Species)) + # shape 는 색상 1~3 까지 RGB = RED,GREEN,BLUE
# AGB = Alpha +RGB / RGB를 16진수로
# 2진수 4자리는 16진수
# 1바이트는 8비트
geom_point(size = 3) + # size = 3 은 점의 크기
ggtitle("꽃잎의 길이와 폭") + # 제목
theme(plot.title = element_text(size = 25, #제목의 형식들 사이즈
face = "bold", #폰트
colour = "red")) #색상
ggplot(data = iris, aes(y = Petal.Length)) +
geom_boxplot(fill = "yellow")
ggplot(data = iris, aes(y = Petal.Length,
fill = Species)) +
geom_boxplot()
year <- 1937:1960
cnt <- as.vector(airmiles)
df <- data.frame(year, cnt)
head(df)
ggplot(df, aes(x = year, y = cnt)) +
geom_line(color = 'red')
ggplot(economics, aes(x = date, y = psavert)) +
geom_line() +
geom_abline(intercept = 12.18671,
slope = -0.0005444 ) # y값은 나중에 함수써서 구해야됨.
ggplot(economics, aes(x = date, y = psavert)) +
geom_line() +
geom_hline(yintercept = mean(economics$psavert))
x_inter <- filter(economics,
psavert == min(economics$psavert)) $date
ggplot(economics, aes(x = date, y = psavert)) +
geom_line() +
geom_vline(xintercept = x_inter)
x_inter <- filter(economics,
psavert == min(economics$psavert)) $date
ggplot(economics, aes(x = date, y = psavert)) +
geom_line() +
geom_vline(xintercept = x_inter)
ggplot(airquality, aes(x = Day, y = Temp)) +
geom_point( ) +
geom_text(aes(label = Temp,
vjust = 0,
hjust = 0))
ggplot(mtcars, aes(x= wt, y=mpg)) +
geom_point() +
annotate("rect", # 사각형 표시
xmin = 3,
xmax = 4,
ymin = 12,
ymax = 21,
alpha = 0.5, # 투명도
fill = "skyblue") +
annotate("segment", x = 2.5, xend = 3.7, #화살표
y=10, yend = 17, color = "red",
arrow = arrow() ) +
annotate("text", x=2.5, y=10, # 텍스트입력
label = "point")
ggplot(mtcars, aes(x= wt, y=mpg)) +
geom_point() +
annotate("rect", # 사각형 표시
xmin = 3,
xmax = 4,
ymin = 12,
ymax = 21,
alpha = 0.5, # 투명도
fill = "skyblue") +
annotate("segment", x = 2.5, xend = 3.7, #화살표
y=10, yend = 17, color = "red",
arrow = arrow() )
ggplot(mtcars, aes(x= wt, y=mpg)) +
geom_point() +
annotate("rect", # 사각형 표시
xmin = 3,
xmax = 4,
ymin = 12,
ymax = 21,
alpha = 0.5, # 투명도
fill = "skyblue") +
annotate("segment", x = 2.5, xend = 3.7, #화살표
y=10, yend = 17, color = "red",
arrow = arrow() ) +
annotate("text", x=2.5, y=10, # 텍스트입력
label = "point")
treemap(GNI2014,
index = c("continent","iso3"), # 계층 구조
vSize = "population",          # 타일 크기 size
vColor = "GNI" ,               # 타일 컬러
type = "value",                # 타일 컬러링 방법
bg.labels = "yellow",          # 레이블 배경색
title = "Worlds GNI" )         # 제목
library(treemap)
treemap(GNI2014,
index = c("continent","iso3"), # 계층 구조
vSize = "population",          # 타일 크기 size
vColor = "GNI" ,               # 타일 컬러
type = "value",                # 타일 컬러링 방법
bg.labels = "yellow",          # 레이블 배경색
title = "Worlds GNI" )         # 제목
data(GNI2014)
treemap(GNI2014,
index = c("continent","iso3"), # 계층 구조
vSize = "population",          # 타일 크기 size
vColor = "GNI" ,               # 타일 컬러
type = "value",                # 타일 컬러링 방법
bg.labels = "yellow",          # 레이블 배경색
title = "Worlds GNI" )         # 제목
st <- data.frame(state.x77)
st <- data.frame(st, stname = rownames(st))
treemap(st,
index = c("stname"),
vSize = "Area",
vColor = "Income",
type = "value",
title = " 미국 주별 수입")
symbols(st$Illiteracy, st$Murder,  # 원의 x,y좌표
circles = st$Population,   # 원의 반지름
inches = 0.3,              # 원크기 조절값
fg ="black",               # 원 테두리 색
bg = "lightgray",          # 원 바탕색
lwd = 1.5,                 # 원 테두리 선 두께
xlab = "rate of Illiteracy",
ylab = "crim(muder) rate",
main = "Illiteracy and Crime")
text(st$Illiteracy, st$Murder,     # 텍스트 출력 x,y 좌표
rownames(st),                 # 출력할 text
cex = 0.6,                    # 폰트 크기
col = "brown")                # 폰트 컬러
