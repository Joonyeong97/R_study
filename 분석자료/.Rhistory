bal <- c(0.1,0.03,0.19,0.12,0.04,
0.0095,0.07,0.06,0.02,0.05)
tbl1 <- data.frame(beers,bal)
tbl1
plot(bal~beers, data = tbl1) #산점도
res <- lm(bal~beers, data = tbl1) #회귀식
res
abline(res)
cor(tbl1[,1:2])
par(mfrow = c(2,2))
month <- 1:12
late <- c(5,8,7,9,4,6,12,13,8,6,6,4)
plot(month, late, main = '지각생 통계',
type = 'l', lty = 1, lwd = 1, las = 1,
xlab = 'Month', ylab = 'late cnt')
plot(month, late, main = '지각생 통계',
type = 'b', lty = 1, lwd = 1, las = 1,
xlab = 'Month', ylab = 'late cnt')
plot(month, late, main = '지각생 통계',
type = 'o', lty = 1, lwd = 2, las = 1,
xlab = 'Month', ylab = 'late cnt')
plot(month, late, main = '지각생 통계',
type = 's', lty = 1, lwd = 1, las = 1,
xlab = 'Month', ylab = 'late cnt')
par(mfrow = c(1,1))
late1 <- c(5,8,7,9,4,6,12,13,
8,6,4,8)
late2 <- c(4,6,5,8,7,8,10,11,
6,5,7,9)
plot(month, late1, main = '지각생 통계',
type = 'o', lty = 1, lwd = 2, las = 1, col = 'red',
xlab = 'Month', ylab = 'late cnt',
ylim = c(1,15))
lines(month, late2, type = 'b',
col = 'blue') # 하나의 라인을 추가시키는것
library(mlbench)
data("BostonHousing")
myds <- BostonHousing[ , c( 'crim',
'rm',
'dis',
'tax',
'medv')]
myds[,'tax']
grp <- c()
for ( i in 1:nrow(myds)) {
if (myds$medv[i] >= 25.0) {
grp[i] <- 'H'
} else if( myds$medv[i] <= 17.0) {
grp[i] <- 'L'
} else  {
grp[i] <- 'M'
}
}
grp
grp <- factor(grp)
grp <- factor(grp, levels = c('H','M',"L"))
myds <- data.frame(myds, grp)
head(myds)
source('D:/lyt/lyt09/workR/실습파일/5 중요_데이터분석.r', encoding = 'UTF-8', echo=TRUE)
str(myds)
head(myds)
table(myds$grp)
par(mfrow = c(2,3))
for (i in 1:5) {
hist(myds[,i], main = colnames(myds)[i],
col = 'yellow')
}
barplot(table(grp) , main = 'grp')
par(mfrow = c(1,1))
par(mfrow = c(2,3))
for (i in 1:5) {
hist(myds[,i], main = colnames(myds)[i],
col = 'yellow')
}
barplot(table(grp) , main = 'grp')
par(mfrow = c(1,1))
par(mfrow = c(2,3))
for (i in 1:5) {
boxplot(myds[,i], main = colnames(myds)[i])
}
barplot(table(grp) , main = 'grp')
par(mfrow = c(1,1))
# 6단계
boxplot(myds$crim~myds$grp, main = "1인당 범죄율")
boxplot(myds$rm~myds$grp, main = "방의 개수")
par(mfrow = c(2,3))
for (i in 1:5) {
boxplot(myds[,i], main = colnames(myds)[i])
}
barplot(table(grp) , main = 'grp')
par(mfrow = c(1,1))
# 6단계
boxplot(myds$crim~myds$grp, main = "1인당 범죄율")
boxplot(myds$rm~myds$grp, main = "방의 개수")
pairs(myds[, -6])
point <- as.integer(myds$grp)
color <- c('red','green','blue')
pairs(myds[,-6], pch = point,
col = color[point])
cor(myds[,-6])
library(rJava)
library(xlsx)
library(xlsxjars)
income <- c( 121, 99, 41, 35, 40, 29, 35, 24, 50, 60 )
period <- c( 19, 20, 16, 16, 18, 12, 14, 12, 16, 17 )
tbl <- data.frame( income, period )
tbl
plot( income~period, data = tbl )
res <- lm( income~period, data = tbl )
abline( res )
cor( income, period )
score <- c( 77.5, 60, 50, 95, 55, 85, 72.5, 80, 92.5, 87.5 )
tv <- c( 14, 10, 20, 7, 25, 9, 15, 13, 4, 21 )
tbl <- data.frame( score, tv )
tbl
plot( score~tv, data = tbl )
res <- lm( score~tv, data = tbl )
abline( res )
cor( score, tv )
sq <- c(121,99,41,35,40,29,35,24,50,60)
tc <- c(19,20,16,16,18,12,14,12,16,17)
gg <- data.frame(sq,tc)
colnames(gg) <- c('수입','교육기간')
plot(gg, main = '교육기간과 수입의 상관관계', las = 1,
pch = 19 , col = 'red')
res <- lm(sq~tc, data = gg)
abline(red)
sq <- c(121,99,41,35,40,29,35,24,50,60)
tc <- c(19,20,16,16,18,12,14,12,16,17)
gg <- data.frame(sq,tc)
colnames(gg) <- c('수입','교육기간')
plot(gg, main = '교육기간과 수입의 상관관계', las = 1,
pch = 19 , col = 'red')
res <- lm(sq~tc, data = gg)
abline(res)
sq <- c(121,99,41,35,40,29,35,24,50,60)
tc <- c(19,20,16,16,18,12,14,12,16,17)
gg <- data.frame(sq,tc)
colnames(gg) <- c('수입','교육기간')
plot(sq~tc, data = gg, main = '교육기간과 수입의 상관관계', las = 1,
pch = 19 , col = 'red')
res <- lm(sq~tc, data = gg)
abline(res)
sj <- c(77.5,60,50,95,55,85,72.5,80,92.5,87.5)
sc <- c(14,10,20,7,25,9,15,13,4,21)
stu <- data.frame(sj,sc)
colnames(stu) <- c('성적','시청시간')
stu
cor(stu)
plot(stu, main = '한주당 TV 시청시간과 성적의 상관 관계', las = 1,
pch = 19 , col = 'red')
cor(mtcars)
pairs(mtcars[,c(-2,-7:-11)])
year <- c(2015,2016,2017,2018,2019,2020,2021,2022,
2023,2024,2025,2026)
per <- c(51014,51245,51446,51635,51811,51973,52123,
52261,52388,52504,52609,52704)
plot(year,per, main = '예상인구수 추계자료',
type = 'l', lty = 1, lwd = 1 , las = 1,
xlab = '연도', ylab = '총인구수(천명')
plot(per,year, main = '예상인구수 추계자료',
type = 'l', lty = 1, lwd = 1 , las = 1,
xlab = '연도', ylab = '총인구수(천명')
plot( trees$Girth, trees$Height )
plot( trees.Girth~trees.Height, data = tbl )
res <- lm( trees.Girth~trees.Height, data = tbl )
abline( res )
plot( trees.Girth~trees.Height, data = tbl )
res <- lm( trees.Girth~trees.Height, data = tbl )
abline( res )
tbl <- data.frame( trees$Girth, trees$Height )
tbl
plot( trees$Girth, trees$Height )
plot( trees.Girth~trees.Height, data = tbl )
res <- lm( trees.Girth~trees.Height, data = tbl )
abline( res )
tbl <- data.frame( trees$Girth, trees$Height )
tbl
z <- c(1,2,3,NA,5,NA,8)
sum(z)
is.na(z)
sum(is.na(z))
sum(z, na.rm = T )
z1 <- z
z2 <- c(5,8,1,NA,3,NA,7)
z1[ is.na(z1)] <- 0 # 단순 대입법
z1
# Listwise delection
z3 <- as.vector(na.omit(z2))
z3
x <- iris
x[1,2] <- NA
x[1,3] <- NA
x[2,3] <- NA
x[3,4] <- NA
head(x)
x
x
sum(is.na(c[,2]))
for (i in 1:ncol(x)) {
this.na <- is.na(x[,i])
cat(colnames(x) [i],
'\t', sum(this.na),
'\n')
}
# apply() 이용
col_na <- function(y){
return( sum (is.na (y)))
}
na_count <- apply(x,2,col_na)
na_count
na_count1 <- apply(x,2,
function(y) sum(is.na(y)))
na_count1
wdset("D:/lyt/lyt09/분석자료")
setwd("D:/lyt/lyt09/분석자료")
setwd("D:/lyt/lyt09/분석자료")
accident <- read.csv('traffic_accident_death', header = T)
accident <- read.csv('traffic_accident_death.csv', header = T)
setwd("D:/lyt/lyt09/분석자료")
accident <- read.csv('2015~2018_traffic_accident_death.csv', header = T)
accident <- read.csv('2015~2018_traffic_accident_death.csv', header = F)
class(accident)
accident <- read.csv('2015~2018_traffic_accident_death.csv', header = T)
accident <- read.csv('2015_2018_traffic_accident_death.csv', header = T)
accident <- read.csv('2015_2018_traffic_accident_death1.csv', header = T)
head(accident)
head(accident)
class(accident)
dim(accident)
str(accident)
accjuya <- accident[,3]
accjuya
accjuya <- table(accident[,3])
accjuya
accbupgyu <- table(accident[,'법규위반_대분류'])
accbupgyu
accident[,'법규위반_대분류']
str(accident)
accbupgyu <- table(accident[,'법규위반'])
accbupgyu
plot(accjuya,accbupgyu , main = '법규 위반과 사망자수 상관관계')
barplot(accjuya,accbupgyu , main = '법규 위반과 사망자수 상관관계')
barplot(na_count[na_conut > 0])
col_na <- function(y){
return( sum (is.na (y) ) )
}
na_count <- apply(x,2,col_na)
na_count
barplot(na_count[na_conut > 0])
# apply() 이용
col_na <- function(y){
return( sum (is.na (y) ) )
}
na_count <- apply(x,2,col_na)
na_count
na_count1 <- apply(x,2,
function(y) sum(is.na(y) ) ) # 익명 함수
na_count1
barplot(na_count[na_conut > 0])
install.packages("VIM")
library(utf8)
accident1 <- read.csv('2015_2018_traffic_accident_death.csv', header = T)
barplot(na_count[na_conut > 0])
na_count
na_count
barplot(na_count[na_count > 0])
require(VIM)
aggr(x,prop = FALSE, numbers = T)
marginplot(x[c('Sepal.Width','Petal.Width')],
pch = 20,
col = c('darkgray','red','blue'))
marginplot(iris[c('Sepal.Width','Petal.Width')],
pch = 20,
col = c('darkgray','red','blue'))
marginplot(x[c('Sepal.Width','Petal.Width')],
pch = 20,
col = c('darkgray','red','blue'))
aggr(x,prop = FALSE, numbers = T)
install.packages("VIM")
rowSums(is.na(x))
sum(rowSums(is.na(x)) > 0)
sum(is.na(x))
head(x)
x[ !complete.cases(x), ]  # NA가 포함된 행출력
y <- x[ !complete.cases(x), ]
head(y)
y <- x[ complete.cases(x), ]
head(y)
head(x)
head(y)
y
marginplot(x[c('Sepal.Width','Petal.Width')],
pch = 20,
col = c('darkgray','red','blue'))
st <- data.frame(state.x77)
summary(st$Income)
boxplot(st$Income)
boxplot.stats(st$Income)$out
boxplot.stats(st$Income)
out.val <- boxplot.stats(st$Income)$out
out.val
st$Income[st$Income %in% out.val] <- NA
head(st)
newdata <- st[ complete.cases(st), ]
head(newdata)
boxplot(newdata$Income)
for (i in 1:ncol(x)) {
this.na <- is.na(x[,i])
cat(colnames(x) [i],
'\t', sum(this.na),
'\n')
}
is.na(z1)
is.na(z)
v1 <- c(1,7,6,8,4,2,3)
order(v1)
v1 <- sort(v1)
v1
v2 <- sort(v1, decreasing = T)
v2
head(iris)
iris[order(iris$Sepal.Length),] # Ascending
iris.new <- iris[order(iris$Sepal.Length), ]
iris[order(iris$Sepal.Length),decreasing = T]
iris[order(iris$Sepal.Length),] # Ascending
iris[order(iris$Sepal.Length),decreasing = T]
iris[order(iris$Sepal.Length,decreasing = T)]
iris[order(iris$Sepal.Length,decreasing = T), ]
head(iris.new)
iris[order(iris$Species, decreasing = T,
iris$Sepal.Length), ] # 정렬기준을 2개설정
order(iris$Sepal.Length)
iris[order(iris$Sepal.Length),] # Ascending
iris[order(iris$Sepal.Length,decreasing = T), ]
iris.new <- iris[order(iris$Sepal.Length), ]
head(iris.new)
head(iris.new)
iris[order(iris$Species, decreasing = T,
iris$Sepal.Length), ] # 정렬기준을 2개설정
sp <- split(iris, iris$Species)
sp
summary(sp)
sp$setosa
summary(sp)
summary(sp$setosa)
subset(iris, Species == 'setosa')
subset(iris, Sepal.Length > 7.5)
subset(iris, Sepal.Length > 5.1 & Sepal.Width>3.9)
subset(iris, Sepal.Length > 7.6,
select = c(Petal.Length, Petal.Width))
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
x <- 1:100
y <- sample(x, size = 10, replace =  FALSE)
y
x <- 1:100
y <- sample(x, size = 10, replace =  FALSE)
y
x <- 1:100
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
y <- sample(x, size = 10, replace =  FALSE)
y
idx <- sample( 1:nrow(iris), size = 50, replace = F)
iris.50 <- iris[idx,]
dim(iris.50)
head(iris.50)
idx
idx
idx
idx
idx
idx <- sample( 1:nrow(iris), size = 50, replace = F)
idx
idx
idx
iris.50 <- iris[idx,]
dim(iris.50)
head(iris.50)
sample(1:20, size = 5)
sample(1:20, size = 5)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(100)
sample(1:20, size = 5)
set.seed(10)
sample(1:20, size = 5)
set.seed(10)
sample(1:20, size = 5)
set.seed(10)
sample(1:20, size = 5)
set.seed(15)
sample(1:20, size = 5)
set.seed(15)
sample(1:20, size = 5)
set.seed(16)
sample(1:20, size = 5)
set.seed(16)
sample(1:20, size = 5)
# 데이터 조합
combn(1:5,3)
combn(1:5,2)
combn(1:5,3) # 조합함수 첫번째인수가 범위,두번째 인수가 몇개를 뽑을건지?
x = c('red','green','blue','black','white')
com <- combn(x,2)
com
for (i in i:ncol(com)) {
cat(com[,i], "\n")
com <- combn(x,3)
com
com <- combn(x,3)
com
com <- combn(x,3)
com
